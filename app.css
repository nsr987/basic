@app.get("/all_payments")
async def get_payments_all():
return 
d-%m-%Y'))
        payment_dict = {
                        'name': project[0].project_name,
                        'invoice': payment_detail[i].invoice_id,
                        'recieved_person': payment_detail[i].recieved_person,
                        'payment_date': datetime.strftime(payment_detail[i].payment_date,'%d-%m-%Y'),
                        'mode':payment_detail[i].transaction_mode,
                        'amount': payment_detail[i].amount,
                        'transaction_id':payment_detail[i].transaction_id,
                        'description': payment_detail[i].remarks}
        pay_details.append(payment_dict)

        #await PaymentDetails.filter(id=i.id).update(read=True)
    #print(payment_dict)
        #rec.save()
    # if not payment_detail:
    #     raise HTTPException(status_code=404,detail=f'Customer Payment record with the id {user_id} not found')
    # else:
    #     for pay in payment_details:
    #         await pay.update(read=True)

    
    #      raise HTTPException(status_code=404,detail=f'Customer Payment record with the id {user_id} not found')
    # # return await Customer_Payment_pydantic.from_queryset_single(PaymentDetails.get(id=user_id))
    return pay_details

@router_payments.put('/customer_payment_details_put/{user_id}',response_model=ResponsePaymentDetails)
async def customer_payment_details_put(user_id:int,form_data: CreatePaymentDetails):
    payment_detail=await PaymentDetails.filter(id=user_id).first()
    if not payment_detail:
        raise HTTPException(status_code=404,detail=f'Customer Payment record with the id {user_id} not found')    
    await PaymentDetails.filter(id=user_id).update(**form_data.dict())
    return await PaymentDetails.get(id=user_id)

@router_payments.delete('/customer_payment_details_delete/{user_id}')
async def customer_payment_details_delete(user_id:int):
    payment_detail=await PaymentDetails.filter(id=user_id).delete()
    if not payment_detail:
        raise HTTPException(status_code=404,detail=f'Customer Payment record with the id {user_id} not found')    
    return {"message":f"Deleted Customer Payment Record {user_id}"}